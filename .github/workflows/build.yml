name: Build whisperdesk-diarization

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64]
        include:
          - os: macos-latest
            arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install platform dependencies
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            sudo apt-get install -y cmake libjsoncpp-dev
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            brew install cmake jsoncpp
          fi

      - name: Build diarization system
        run: npm run build

      - name: Test diarization system
        run: npm run debug

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: diarize-cli-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            binaries/diarize-cli*
            models/*.onnx
          retention-days: 30

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            diarize-cli-*/**/*
          generate_release_notes: true